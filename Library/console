//console 모듈입니다,
namespace console
{
	#include <iostream>
	void putline() { putchar('\n'); }

	void put(const String& val) { wprintf(L"%s", ((std::wstring)val).c_str()); }
	void putline(const String& val) { put(val); putline(); }
	
	template<class IntType>
	void put(Int_Basic<IntType> val) {	printf("%d", (IntType)val); }
	template<class IntType>
	void putline(Int_Basic<IntType> val) { put(val); putline(); }
	
	void put(Char val) { putwchar((wchar_t)val); }
	void putline(Char val) { put(val); putline(); }
	
	void put(Float val) { printf("%f", (float)val); }
	void putline(Float val) { put(val); putline(); }
	
	void put(Double val) { printf("%f", (double)val); }
	void putline(Double val) { put(val); putline(); }

	void put(Bool val) { val ? printf("true") : printf("false"); }
	void putline(Bool val) { put(val); putline(); }
	
	void flush_out() { fflush(stdout); }
	void flush_in() { while (getchar() != EOF); }

	std::wstring getline() { std::wstring temp; fgetws((wchar_t*)temp.data(), INT_MAX, stdin); return temp; }
	std::wstring getword() { std::wstring temp; wscanf(L"%s", (wchar_t*)temp.data()); return temp; }
	wchar_t getc() { return wchar_t(getwchar()); }
	void get(Int& value) { wscanf(L"%d", &(int&)value); }
	void get(Char& value) { wscanf(L"%c", &(wchar_t&)value); }
	void get(Float& value) { wscanf(L"%f", &(float&)value); }
	void get(Double& value) { wscanf(L"%lf", &(double&)value); }
	
	void clear() { system("cls"); }
	void pause() { system("pause"); }
	void backspace() { putchar('\b'); }
}